// Generated by CoffeeScript 1.6.3
(function() {
  var YParser, YParser2, bnf, test, testbnf,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  YParser = require("./yparser");

  bnf = require("./bnf");

  testbnf = require("./testbnf");

  YParser2 = (function(_super) {
    __extends(YParser2, _super);

    function YParser2() {
      var gram, parser;
      YParser2.__super__.constructor.call(this);
      gram = new YParser.GrammarParser;
      gram.loadString(bnf);
      parser = gram.loadGrammar();
      this.grammars = parser.grammars;
    }

    return YParser2;

  })(YParser.AstParser);

  test = new YParser2;

  test.loadString(testbnf);

  if ((test.execGrammar("main")) === false) {
    throw Error("Failed to exec grammar");
  }

  console.log(JSON.stringify(test.ast, null, 2));

}).call(this);
